As a Kubernetes engineer for the weather app development team, you are responsible for deploying the app as a container in Kubernetes. The team manages the API keys for the external weather service and uses a configuration file to manage database settings for the app. However, storing confidential data in plain text is not secure, and I am looking for a standardized method to handle them efficiently and quickly that can be reused. The architect has recommended using Secrets that can be used to inject key-value pairs as environment variables or mounted as a volume.

To get started, a local Kubernetes cluster has been provisioned for you, and the Pod manifest used by the app is available in the local directory. You must create a Secret to manage the API keys and inject it as environment variables for the Pod. After that, you must create a second Secret from literals to manage the database connection settings required by the app. Finally, you need to mount the database connection Secret as a volume.

